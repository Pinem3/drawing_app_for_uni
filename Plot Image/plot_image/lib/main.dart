import 'package:flutter/material.dart';
import 'package:plot_image/homepage.dart';
import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:plot_image/screens/work_page.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Flutter Demo',
      theme: FlexThemeData.light(
        colors: const FlexSchemeColor(
          primary: Color(0xff0d467a),
          primaryContainer: Color(0xffeff3fb),
          secondary: Color(0xff5fb9fc),
          secondaryContainer: Color(0xffeff3fb),
          tertiary: Color(0xff1260a7),
          tertiaryContainer: Color(0xff398dd2),
          appBarColor: Color(0xffeff3fb),
          error: Color(0xffb00020),
        ),
        surfaceMode: FlexSurfaceMode.highBackgroundLowScaffold,
        blendLevel: 2,
        tabBarStyle: FlexTabBarStyle.forAppBar,
        subThemesData: const FlexSubThemesData(
          blendOnLevel: 10,
          blendOnColors: false,
          splashType: FlexSplashType.defaultSplash,
          defaultRadius: 10.0,
          filledButtonSchemeColor: SchemeColor.secondary,
          outlinedButtonOutlineSchemeColor: SchemeColor.primary,
          outlinedButtonPressedBorderWidth: 2.0,
          toggleButtonsSchemeColor: SchemeColor.secondary,
          toggleButtonsUnselectedSchemeColor: SchemeColor.primary,
          toggleButtonsBorderSchemeColor: SchemeColor.primary,
          segmentedButtonSchemeColor: SchemeColor.primary,
          segmentedButtonBorderSchemeColor: SchemeColor.primary,
          unselectedToggleIsColored: true,
          sliderValueTinted: true,
          inputDecoratorSchemeColor: SchemeColor.primary,
          inputDecoratorIsFilled: false,
          inputDecoratorBackgroundAlpha: 12,
          inputDecoratorBorderSchemeColor: SchemeColor.primary,
          inputDecoratorRadius: 12.0,
          inputDecoratorPrefixIconSchemeColor: SchemeColor.primary,
          fabSchemeColor: SchemeColor.primaryContainer,
          popupMenuRadius: 6.0,
          popupMenuElevation: 8.0,
          popupMenuSchemeColor: SchemeColor.onPrimary,
          alignedDropdown: true,
          useInputDecoratorThemeInDialogs: true,
          appBarBackgroundSchemeColor: SchemeColor.tertiary,
          tabBarItemSchemeColor: SchemeColor.onPrimary,
          tabBarUnselectedItemSchemeColor: SchemeColor.primaryContainer,
          drawerIndicatorSchemeColor: SchemeColor.primary,
          bottomNavigationBarMutedUnselectedLabel: false,
          bottomNavigationBarMutedUnselectedIcon: false,
          menuRadius: 6.0,
          menuElevation: 8.0,
          menuSchemeColor: SchemeColor.onPrimary,
          menuBarBackgroundSchemeColor: SchemeColor.onPrimary,
          menuBarRadius: 0.0,
          menuBarElevation: 1.0,
          navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
          navigationBarMutedUnselectedLabel: false,
          navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
          navigationBarMutedUnselectedIcon: false,
          navigationBarIndicatorSchemeColor: SchemeColor.primary,
          navigationBarIndicatorOpacity: 1.00,
          navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
          navigationRailMutedUnselectedLabel: false,
          navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
          navigationRailMutedUnselectedIcon: false,
          navigationRailIndicatorSchemeColor: SchemeColor.primary,
          navigationRailIndicatorOpacity: 1.00,
        ),
        useMaterial3ErrorColors: true,
        visualDensity: FlexColorScheme.comfortablePlatformDensity,
        useMaterial3: true,
        // To use the Playground font, add GoogleFonts package and uncomment
        // fontFamily: GoogleFonts.notoSans().fontFamily,
      ),
      // darkTheme: FlexThemeData.dark(
      //   colors: const FlexSchemeColor(
      //     primary: Color(0xff9fc9ff),
      //     primaryContainer: Color(0xff00325b),
      //     secondary: Color(0xffffb59d),
      //     secondaryContainer: Color(0xff872100),
      //     tertiary: Color(0xff86d2e1),
      //     tertiaryContainer: Color(0xff004e59),
      //     appBarColor: Color(0xff872100),
      //     error: Color(0xffcf6679),
      //   ),
      //   surfaceMode: FlexSurfaceMode.highBackgroundLowScaffold,
      //   blendLevel: 8,
      //   tabBarStyle: FlexTabBarStyle.forAppBar,
      //   subThemesData: const FlexSubThemesData(
      //     blendOnLevel: 8,
      //     splashType: FlexSplashType.defaultSplash,
      //     defaultRadius: 10.0,
      //     filledButtonSchemeColor: SchemeColor.secondary,
      //     outlinedButtonOutlineSchemeColor: SchemeColor.primary,
      //     outlinedButtonPressedBorderWidth: 2.0,
      //     toggleButtonsSchemeColor: SchemeColor.secondary,
      //     toggleButtonsUnselectedSchemeColor: SchemeColor.primary,
      //     toggleButtonsBorderSchemeColor: SchemeColor.primary,
      //     segmentedButtonSchemeColor: SchemeColor.primary,
      //     segmentedButtonBorderSchemeColor: SchemeColor.primary,
      //     unselectedToggleIsColored: true,
      //     sliderValueTinted: true,
      //     inputDecoratorSchemeColor: SchemeColor.primary,
      //     inputDecoratorIsFilled: false,
      //     inputDecoratorBackgroundAlpha: 43,
      //     inputDecoratorRadius: 12.0,
      //     fabSchemeColor: SchemeColor.primaryContainer,
      //     popupMenuRadius: 6.0,
      //     popupMenuElevation: 8.0,
      //     popupMenuSchemeColor: SchemeColor.onPrimary,
      //     alignedDropdown: true,
      //     useInputDecoratorThemeInDialogs: true,
      //     drawerIndicatorSchemeColor: SchemeColor.primary,
      //     bottomNavigationBarMutedUnselectedLabel: false,
      //     bottomNavigationBarMutedUnselectedIcon: false,
      //     menuRadius: 6.0,
      //     menuElevation: 8.0,
      //     menuSchemeColor: SchemeColor.onPrimary,
      //     menuBarBackgroundSchemeColor: SchemeColor.onPrimary,
      //     menuBarRadius: 0.0,
      //     menuBarElevation: 1.0,
      //     navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
      //     navigationBarMutedUnselectedLabel: false,
      //     navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
      //     navigationBarMutedUnselectedIcon: false,
      //     navigationBarIndicatorSchemeColor: SchemeColor.primary,
      //     navigationBarIndicatorOpacity: 1.00,
      //     navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
      //     navigationRailMutedUnselectedLabel: false,
      //     navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
      //     navigationRailMutedUnselectedIcon: false,
      //     navigationRailIndicatorSchemeColor: SchemeColor.primary,
      //     navigationRailIndicatorOpacity: 1.00,
      //   ),
      //   useMaterial3ErrorColors: true,
      //   visualDensity: FlexColorScheme.comfortablePlatformDensity,
      //   useMaterial3: true,
      // ),
      home: WorkPage(),
      // home: WorkPage(),
    );
  }

  static const ColorScheme flexSchemeLight = ColorScheme(
    brightness: Brightness.light,
    primary: Color(0xff0d467a),
    onPrimary: Color(0xffffffff),
    primaryContainer: Color(0xffeff3fb),
    onPrimaryContainer: Color(0xff141414),
    secondary: Color(0xff5fb9fc),
    onSecondary: Color(0xffeff3fb),
    secondaryContainer: Color(0xffeff3fb),
    onSecondaryContainer: Color(0xff141414),
    tertiary: Color(0xff1260a7),
    onTertiary: Color(0xffffffff),
    tertiaryContainer: Color(0xff398dd2),
    onTertiaryContainer: Color(0xfff3faff),
    error: Color(0xffba1a1a),
    onError: Color(0xffffffff),
    errorContainer: Color(0xffffdad6),
    onErrorContainer: Color(0xff410002),
    surface: Color(0xfffdfdfd),
    onSurface: Color(0xff090909),
    onSurfaceVariant: Color(0xff121212),
    outline: Color(0xff818181),
    outlineVariant: Color(0xffcdcdcd),
    shadow: Color(0xff000000),
    scrim: Color(0xff000000),
    inverseSurface: Color(0xff101111),
    onInverseSurface: Color(0xfff5f5f5),
    inversePrimary: Color(0xff9dc5e9),
    surfaceTint: Color(0xff0d467a),
  );

  static const ColorScheme flexSchemeDark = ColorScheme(
    brightness: Brightness.dark,
    primary: Color(0xff9fc9ff),
    onPrimary: Color(0xff060708),
    primaryContainer: Color(0xff00325b),
    onPrimaryContainer: Color(0xfff2f5f8),
    secondary: Color(0xffffb59d),
    onSecondary: Color(0xff080706),
    secondaryContainer: Color(0xff872100),
    onSecondaryContainer: Color(0xfffaf4f2),
    tertiary: Color(0xff86d2e1),
    onTertiary: Color(0xff050808),
    tertiaryContainer: Color(0xff004e59),
    onTertiaryContainer: Color(0xfff2f7f8),
    error: Color(0xffffb4ab),
    onError: Color(0xff690005),
    errorContainer: Color(0xff93000a),
    onErrorContainer: Color(0xffffb4ab),
    surface: Color(0xff151618),
    onSurface: Color(0xfff7f7f7),
    onSurfaceVariant: Color(0xfff2f2f2),
    outline: Color(0xff818181),
    outlineVariant: Color(0xff353535),
    shadow: Color(0xff000000),
    scrim: Color(0xff000000),
    inverseSurface: Color(0xfffbfdff),
    onInverseSurface: Color(0xff070708),
    inversePrimary: Color(0xff516274),
    surfaceTint: Color(0xff9fc9ff),
  );
}
